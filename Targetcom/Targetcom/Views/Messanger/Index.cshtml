@{
    ViewData["Title"] = "Messanger";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model Targetcom.Models.ViewModels.MessageVM; 
<style>
    #summernote {
        font-size: 14px;
        outline: 0 !important;
        border: 0;
    }

    .activel {
        border-left: 3px solid #0094ff;
    }
    .messagewrap {
        width: 13rem;
        word-wrap: break-word;
        font-size: 14.5px;
        /*word-break: break-all;*/
    }
    #sendButton:active {
        color: #6dbffb;
    }
    .night .hovever:hover {
        background-color: #2b2b2b;
        text-decoration: none;
    }
    .night .hovever:active {
        background-color: #454545;
        text-decoration: none;
    }

    .hovever:hover {
        background-color: #e9e9e9;
        text-decoration: none;
    }

    .hovever:active {
        background-color: #d3d3d3;
        text-decoration: none;
    }
    .btne i {
        color: #2b2b2b;
    }
    .night .btne i {
        color: #d5d5d5;
    }
    .btne:hover i {
        color: #e43838;
    }
</style>
<div class="gap d-flex gap day_color_font" style="font-family: Poppins, sans-serif;">
    @*<partial name="SideBar" />*@

    <input type="hidden" value="@Model.IdentityProfile.Name @Model.IdentityProfile.Surname" class="form-control" id="username" name="username" autocomplete="off" />
    <input type="hidden" value="@Model.IdentityProfile.UrlAvatar" class="form-control" id="useravatar" name="useravatar" autocomplete="off" />
    <input type="hidden" value="@Model.IdentityProfile.Email" class="form-control" id="useremail" name="useremail" autocomplete="off" />

    <div style="width: 100%; height:calc(98vh - 150px); gap: 1rem;" class="d-flex">
        @if (Model.SelectedProfile is not null)
        {
            var Room = Model.IdentityProfile.ToMessageGroups.FirstOrDefault(f => (f.AdminId == Model.IdentityProfile.Id && f.FriendId == Model.SelectedProfile.Id) || (f.FriendId == Model.IdentityProfile.Id && f.AdminId == Model.SelectedProfile.Id));
            <input type="hidden" id="selectedemail" value="@Model.SelectedProfile.Email" />
            <div class="rounded shadow" style="width: 67%; height: 100%;">
                <div class="d-flex flex-column" style="height:100%;">
                    <div class="pt-2 pb-2 pl-3 pr-3 d-flex align-items-center day_back_head rounded">
                        <img src="@Model.SelectedProfile.UrlAvatar" class="rounded-circle" style="width: 38px; height: 38px;" />
                        <div class="d-flex align-items-center ml-2" style="width: 100%;">
                            <a class="btn-link m-0 border-0 day_color_main" asp-controller="Friends" asp-action="ViewProfile" asp-route-id="@Model.SelectedProfile.Id"><strong class="m-0 day_color_main">@Model.SelectedProfile.Name @Model.SelectedProfile.Surname</strong></a>                         
                            @if (Model.SelectedProfile.IsVerify)
                            {
                                <i class="fas fa-check day_color_main ml-1" style="font-size: 11px;"></i>
                            }
                            @if (Room is not null)
	                        {	 
                                <a class="ml-auto mr-3 btne" asp-controller="Messanger" asp-action="RemoveRoom" asp-route-id="@Room.Id" style="outline:0!important;"><i class="fas fa-trash-alt"></i></a>
	                        }
                        </div>
                    </div>
                    <div class="pt-2 pb-2 pl-3 pr-3 d-flex flex-column" id="messageList" style="gap: 1rem; overflow-y: auto; height:100%;">

                        @if (Room is not null)
                        {
                            if (Room.Messages is not null)
                            {
                                @foreach (var item in Room.Messages)
                                {
                                    if (item.ProfileId == Model.SelectedProfile.Id)
                                    {
                                        <div class="p-2 d-flex justify-content-center align-self-start bg-transparent cborder shadow-sm rounded-pill" style="max-width: 70%">
                                            <img src="@item.Profile.UrlAvatar" class="rounded-circle" style="width: 40px; height: 40px; object-fit: cover;" alt="#" />
                                            <div class="ml-3 mr-3 overflow-hidden d-flex flex-column">
                                                <p class="m-0 font-weight-bold day_color_main">@item.Profile.Name @item.Profile.Surname</p>
                                                <p class="m-0 font-weight-light day_color_font messagewrap">@item.Content</p>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="p-2 d-flex align-items-center align-self-end day_back_head shadow-sm rounded-pill" style="max-width: 70%">
                                            <div class="ml-3 mr-3 overflow-hidden d-flex flex-column">
                                                <p class="m-0 font-weight-bold day_color_main">@item.Profile.Name @item.Profile.Surname</p>
                                                <p class="m-0 font-weight-light day_color_font messagewrap">@item.Content</p>
                                            </div>
                                            <img src="@item.Profile.UrlAvatar" class="rounded-circle" style="width: 40px; height: 40px; object-fit: cover;" alt="#" />
                                        </div>
                                    }
                                }
                            }
                        }
                    </div>
                    <script>
                        var scrolls = document.getElementById("messageList");
                        scrolls.scrollTop = scrolls.scrollHeight;
                    </script>
                    @if (Model.IdentityProfile.Friendships.FirstOrDefault(f => (f.FriendId == Model.SelectedProfile.Id && f.ProfileId == Model.IdentityProfile.Id && f.FriendStatus == Env.Blacklist) || (f.ProfileId == Model.SelectedProfile.Id && f.FriendId == Model.IdentityProfile.Id && f.FriendStatus == Env.Blacklist)) is not null)
                    {
                        <div class="p-3 mt-auto d-flex align-items-center day_back_head rounded justify-content-center">
                            <i class="fas fa-info-circle text-danger" style="font-size: 25px;"></i>
                            <p class="text-danger m-0 ml-3" font>Message sending is blocked</p>
                        </div>
                    }
                    else {
                        <div class="pt-2 pb-2 pl-3 pr-3 mt-auto d-flex align-items-center day_back_head rounded">
                            <input class="form-control day_back_default day_color_font border-0" placeholder="Enter message ..." type="text" id="message" value="" autocomplete="off" style="font-size: 14px;" />
                            <button type="button" id="sendButton" class="m-0 ml-2 border-0 bg-transparent day_color_main" style="outline:0;"><i class="far fa-envelope" style="font-size: 25px;"></i></button>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="rounded shadow d-flex justify-content-center align-items-center" style="width: 67%; height: 100%;">
                <h3>Select room</h3>
            </div>
        }
        <div class="rounded shadow" style="width: 33%;">
            @if (Model.IdentityProfile.ToMessageGroups.Count > 0)
            {
                @foreach (var item in Model.IdentityProfile.ToMessageGroups)
                {
                    string lastmessage = "None";
                    if (item.Messages.Count > 0)
                    {
                        lastmessage = item.Messages.LastOrDefault().Content;
                    }
                    if (item.FriendId == Model.IdentityProfile.Id)
                    {
                        <a asp-action="Index" asp-route-id="@item.AdminId" class="d-flex align-items-start p-2 hovever rounded">
                            <img src="@item.Admin.UrlAvatar" class="rounded-circle" style="width: 48px; height: 48px;" />
                            <div class="d-flex flex-column ml-2">
                                <div class="d-flex align-items-center">
                                    <h6 class="day_color_main m-0">
                                        <span class="text-decoration-none">@item.Admin.Name @item.Admin.Surname</span>
                                        @if (item.Admin.IsVerify)
                                        {
                                            <i class="fas fa-check day_color_main ml-1" style="font-size: 13px;"></i>
                                        }
                                    </h6>
                                </div>
                                <p class="m-0 text-decoration-none text-muted" id="@item.Admin.Email">@lastmessage</p>
                            </div>
                        </a>
                    }
                    else
                    {
                        <a asp-action="Index" asp-route-id="@item.FriendId" class="d-flex align-items-start p-2 hovever rounded">
                            <img src="@item.Friend.UrlAvatar" class="rounded-circle" style="width: 48px; height: 48px;" />
                            <div class="d-flex flex-column ml-2" style="width: 100%;">
                                <div class="d-flex align-items-center" style="width: 100%;">
                                    <h6 class="day_color_main m-0">
                                        <span class="text-decoration-none">@item.Friend.Name @item.Friend.Surname</span>
                                        @if (item.Friend.IsVerify)
                                        {
                                            <i class="fas fa-check day_color_main ml-1" style="font-size: 13px;"></i>
                                        }
                                    </h6>
                                </div>
                                <p class="m-0 text-decoration-none text-muted" id="@item.Friend.Email">@lastmessage</p>
                            </div>
                        </a>
                    }
                }
            }
            else
            {
                <div class="p-2">
                    <h5 class="m-0 day_color_font font-weight-bold text-center">You dont have a message rooms</h5>
                </div>
            }
        </div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>

<script>

    "use strict"

    var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
    var usernames = "";

    var receiver = "";
    var sender = "";

    document.getElementById("sendButton").classList.add("d-none");
    document.getElementById("message").addEventListener("keyup", () => {
        if (document.getElementById("message").value == "") {
            document.getElementById("sendButton").classList.add("d-none");
        }
        else {
            document.getElementById("sendButton").classList.remove("d-none");
        }
    });

    connection.on("ReceiveMessage", function (user, message, url, senderEmail, receiverEmail) {
        var msg = message.replace(/&/g, "&amp").replace(/</g, "&lt;").replace(/</g, "&gt;");
        let wrapper = document.createElement("div");

        if ((sender == document.getElementById("useremail").value && receiver == document.getElementById("selectedemail").value) ||
            (senderEmail == document.getElementById("selectedemail").value && receiverEmail == document.getElementById("useremail").value)) {

            if (usernames == "") {
                wrapper.classList.add("p-2", "d-flex", "align-items-center", "align-self-start", "bg-transparent", "cborder", "shadow-sm", "rounded-pill");
                wrapper.style.maxWidth = "70%";

                let messagewrap = document.createElement("div");
                messagewrap.classList.add("ml-3", "mr-3", "overflow-hidden", "d-flex", "flex-column");
                let pib = document.createElement("p");
                pib.classList.add("m-0", "font-weight-bold", "day_color_main");
                pib.innerText = user;
                let messagep = document.createElement("p");
                messagep.classList.add("m-0", "font-weight-light", "day_color_font", "messagewrap");
                messagep.innerText = msg;


                let image = document.createElement("img");
                image.classList.add("rounded-circle");
                image.style.width = "40px";
                image.style.height = "40px";
                image.src = url;
                image.alt = "";
                image.style.objectFit = "cover";

                wrapper.appendChild(image);
                wrapper.appendChild(messagewrap);
                messagewrap.appendChild(pib);
                messagewrap.appendChild(messagep);

                document.getElementById(senderEmail).innerText = msg.substring(0, 20) + "...";
            }
            else {
                wrapper.classList.add("p-2", "d-flex", "align-items-center", "align-self-end", "day_back_head", "shadow-sm", "rounded-pill");
                wrapper.style.maxWidth = "70%";

                let messagewrap = document.createElement("div");
                messagewrap.classList.add("ml-3", "mr-3", "overflow-hidden", "d-flex", "flex-column");
                let pib = document.createElement("p");
                pib.classList.add("m-0", "font-weight-bold", "day_color_main");
                pib.innerText = user;
                let messagep = document.createElement("p");
                messagep.classList.add("m-0", "font-weight-light", "day_color_font", "messagewrap");
                messagep.innerText = msg;


                let image = document.createElement("img");
                image.classList.add("rounded-circle");
                image.style.width = "40px";
                image.style.height = "40px";
                image.src = url;
                image.alt = "";
                image.style.objectFit = "cover";

                wrapper.appendChild(messagewrap);
                messagewrap.appendChild(pib);
                messagewrap.appendChild(messagep);
                wrapper.appendChild(image);

                document.getElementById(receiverEmail).innerText = "You: " + msg.substring(0, 15) + "...";;
            }

            usernames = "";
            sender = "";
            receiver = "";

            var scroll = document.getElementById("messageList");
            scroll.scrollTop = scroll.scrollHeight;

            document.getElementById("messageList").scrollTop = document.getElementById("messageList").scrollHeight;
            document.getElementById("messageList").appendChild(wrapper);
        }
        else {
            if (usernames == "") {

                document.getElementById(senderEmail).innerText = msg.substring(0, 20) + "...";
            }
            else {
                document.getElementById(receiverEmail).innerText = "You: " + msg.substring(0, 15) + "...";
            }

            usernames = "";
            sender = "";
            receiver = "";

            document.getElementById("messageList").scrollTop = document.getElementById("messageList").scrollHeight;
            document.getElementById("messageList").appendChild(wrapper);
        }

    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    })
    .catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var message = document.getElementById("message").value;

        usernames = document.getElementById("username").value;

        sender = document.getElementById("useremail").value;
        receiver = document.getElementById("selectedemail").value;

        var scroll = document.getElementById("messageList");
        scroll.scrollTop = scroll.scrollHeight;
        document.getElementById("sendButton").classList.add("d-none");

        connection.invoke
            ("SendMessage",
                document.getElementById("username").value,
                message,
                document.getElementById("useravatar").value,
                document.getElementById("useremail").value,
                document.getElementById("selectedemail").value).then(function () {
                    document.getElementById("message").value = "";
                })
            .catch(function (err) {
                return console.error(err.toString());
            });
        event.preventDefault();
    });

    document.getElementById("message").addEventListener("keyup", function (event) {
        if (event.keyCode == 13 && document.getElementById("message").value != "") {
            var message = document.getElementById("message").value;

            usernames = document.getElementById("username").value;

            sender = document.getElementById("useremail").value;
            receiver = document.getElementById("selectedemail").value;
            var scroll = document.getElementById("messageList");
            scroll.scrollTop = scroll.scrollHeight;
            document.getElementById("sendButton").classList.add("d-none");

            connection.invoke
                ("SendMessage",
                    document.getElementById("username").value,
                    message,
                    document.getElementById("useravatar").value,
                    document.getElementById("useremail").value,
                    document.getElementById("selectedemail").value).then(function () {
                document.getElementById("message").value = "";
            })
            .catch(function (err) {
                return console.error(err.toString());
            });
        }
        event.preventDefault();
    });
</script>