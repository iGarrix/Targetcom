@{
    ViewData["Title"] = "Images";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model Targetcom.Models.ViewModels.ViewProfileVM;

<style>
    .gap {
        gap: 1rem;
    }

    .card-footer .d-flex > a:hover {
        text-decoration: none;
    }

    .viewallbtn {
        width: 100%;
        font-family: Poppins, sans-serif;
    }

        .viewallbtn:hover {
            background-color: #eeeeee;
            text-decoration: none;
        }

    .disable {
        display: none;
    }

    .btnedit {
        width: 100%;
        font-family: Poppins, sans-serif;
    }

        .btnedit:hover {
            background-color: #eeeeee;
            text-decoration: none;
        }

    .middletabbtn:hover {
        text-decoration: none;
    }

    .middletabbtn1 {
        background-color: transparent;
        text-decoration: none;
    }

        .middletabbtn1:hover {
            background-color: #eeeeee;
            text-decoration: none;
        }

    #summernote {
        font-size: 14px;
        outline: 0 !important;
        border: 0;
    }


    .dropbtn {
        color: white;
        border: none;
        cursor: pointer;
        background-color: transparent;
    }

    /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
        display: inline-block;
        transition: .2s;
    }

    /* Dropdown Content (Hidden by Default) */
    .dropdown-content {
        display: none;
        position: absolute;
        min-width: 160px;
        z-index: 1;
        right: 0;
        transition: .2s;
    }

        /* Links inside the dropdown */
        .dropdown-content button {
            display: block;
        }

    /* Show the dropdown menu on hover */
    .dropdown:hover .dropdown-content {
        display: block;
    }

    .btnlike:hover {
        text-decoration: none;
    }

    img {
        object-fit: cover;
    }

    .hover {
        transition: .2s;
        filter: brightness(100%);
    }

        .hover:hover {
            filter: brightness(90%);
        }

    .night .hover:hover {
        filter: brightness(150%);
    }

    .post .likes {
        display: none;
    }

    .post:hover .likes {
        display: flex;
    }
</style>
<div class="gap d-flex gap day_color_font" style="font-family: Poppins, sans-serif;">
    <partial name="SideBar" model="new Tuple<int, int>(Model.IdentityProfile.Friendships.Count(w => w.FriendStatus == Env.Invite && w.FriendId == Model.IdentityProfile.Id),0)" />

    <div style="width: 100%" class="d-flex flex-column">
        <div class="border-0 rounded">
            <div class="d-flex flex-wrap" style="gap: 1.2rem;">
                @foreach (var item in Model.FindedProfile.ProfilePostages.OrderByDescending(i => i.TimeStamp))
                {
                    <partial name="Components/ImagePost" model="new Targetcom.Models.ViewModels.ImagePostComponentVM() { IdentityProfile = Model.IdentityProfile, ImageModel = item, Guid = new Guid() }" />                   
                }
            </div>
        </div>
        <div class="p-2 d-flex justify-content-center mt-auto">
            @if (Model.Current_AllPost_Page > 0)
            {
                <a asp-controller="Friends" asp-action="Images" asp-route-id="@Model.FindedProfile.Id" asp-route-page="@(Model.Current_AllPost_Page - 1)" class="p-3 d-flex align-items-center text-decoration-none text-light day_back_main rounded border-0 navbtn"><i class="fas fa-arrow-left m-0 mr-2"></i>Prev</a>
            }
            @if ((Model.Current_AllPost_Lenght / Env.IMAGE_LOADING_LIMIT) > Model.Current_AllPost_Page)
            {
                <a asp-controller="Friends" asp-action="Images" asp-route-id="@Model.FindedProfile.Id" asp-route-page="@(Model.Current_AllPost_Page + 1)" class="p-3 d-flex align-items-center text-decoration-none text-light day_back_main rounded border-0 ml-3 navbtn">Next <i class="fas fa-arrow-right m-0 ml-2"></i></a>
            }
        </div>
    </div>
</div>
