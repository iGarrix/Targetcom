@{
    ViewData["Title"] = "Help";
}
@model Profile;

<style>
    #summernote {
        font-size: 14px;
        outline: 0 !important;
        border: 0;
    }

    .activel {
        border-left: 3px solid #0094ff;
    }
    .anim {
        transition: 2s;
        animation: ocean 10s ease-in-out alternate infinite;    
    }
    @@keyframes ocean {
        0% {
            color: #fb3737;
            text-shadow: 0 0 40px #fb3737;
        }
        100% {
            color: #b3e536;
            text-shadow: 0 0 40px #b3e536;
        }
    }
    .down {
        animation: loadDown 1s ease-in-out forwards;
    }
    @@keyframes loadDown {
        0% {
            opacity: 100%;
        }
        100% {
            opacity: 0%;
            visibility: hidden;
        }
    }
</style>
<div class="gap d-flex gap day_color_font" style="font-family: Poppins, sans-serif;">
    <partial name="SideBar" model="new Tuple<int, int>(Model.Friendships.Count(w => w.FriendStatus == Env.Invite && w.FriendId == Model.Id),0)" />

    <div style="width: 100%; gap:1rem;" class="d-flex flex-column">
        <div class="border-0 day_back_head overflow-auto rounded p-3">
            <h4 class="m-0 day_color_font">You needed questions?</h4>
            <hr />
            <p class="m-0 day_color_main">@Env.QuestionGmail</p>
        </div>
        <div class="border-0 day_back_head overflow-auto rounded p-3">
            <h4 class="m-0 day_color_font">Commercion in developers</h4>
            <hr />
            <p class="m-0 day_color_main">@Env.Gmail</p>
        </div>
    </div>
</div>

<div class="position-fixed" id="downid" style="top: 0; left:0; width: 100vw; height: 100vh; z-index: 999;">
    <div class="d-flex justify-content-center align-items-center flex-column day_back_head w-100 h-100">
        <i class="far fa-question-circle d-flex justify-content-center anim" style="width: 100%; font-size: 10vw;"></i>
        <h2 class="day_color_font mt-4 font-weight-bold" style="letter-spacing: 2px; font-family: Montserrat, sans-serif;">Helping</h2>
    </div>
</div>

@section Scripts {
    <script>
        var before_loadtime = new Date().getTime();
        window.onload = Pageloadtime;
        function Pageloadtime() {
            var aftr_loadtime = new Date().getTime();
            pgloadtime = (aftr_loadtime - before_loadtime) / 1000
            setTimeout(() => {
                var loadscreen = document.getElementById("downid");
                loadscreen.classList.add("down");
            }, pgloadtime);
        }
    </script>
}