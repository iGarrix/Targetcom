@{
    ViewData["Title"] = "Games";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model Targetcom.Models.ViewModels.GameVM;
<style>
    .gap {
        gap: 1rem;
    }

    .btngame:hover {
        text-decoration: none;
    }

    .pointer {
        border-top: 0;
        border-left: 0;
        border-right: 0;
        border-bottom: 2px solid white;
    }

    .borders {
        border: 0;
        background-repeat: no-repeat;
    }

    input[type=text] {
        border: 0;
        background-color: transparent;
        outline: 0 !important;
        font-size: 14px;
    }

    .anim {
        transition: 2s;
        animation: ocean 10s ease-in-out alternate infinite;
    }

    @@keyframes ocean {
        0% {
            color: #7441f3;
            text-shadow: 0 0 40px #7441f3;
        }

        100% {
            color: #b3e536;
            text-shadow: 0 0 40px #b3e536;
        }
    }

    .down {
        animation: loadDown 1s ease-in-out forwards;
    }

    @@keyframes loadDown {
        0% {
            opacity: 100%;
        }

        100% {
            opacity: 0%;
            visibility: hidden;
        }
    }
    .navbtn:hover {
        transform: scale(1.040);
    }
</style>

<div class="gap d-flex gap day_color_font" style="font-family: Poppins, sans-serif;">
    <partial name="SideBar" model="new Tuple<int, int>(Model.IdentityProfile.Friendships.Count(w => w.FriendStatus == Env.Invite && w.FriendId == Model.IdentityProfile.Id),0)" />
    <div style="width: 100%; height: 100%;" class="d-flex flex-column gap">
        <div class="rounded overflow-hidden day_back_head">
            <div class="pt-4 pr-4 pl-4 pb-2">
                <h4>Follow games</h4>
            </div>
            @if (Model.IdentityProfile.ProfileGames.Where(i => i.Status == Env.GameStatusFollowed).Count() > 0)
            {
                <div id="carouselExampleCaptions" class="carousel slide bg-dark" data-ride="carousel" style="width: 100%; height: 50vh;">
                    <ol class="carousel-indicators">
                        @for (int i = 0; i < Model.IdentityProfile.ProfileGames.Where(i => i.Status == Env.GameStatusFollowed).Take(20).Count(); ++i)
                        {
                            if (i == 0)
                            {
                                <li data-target="#carouselExampleCaptions" data-slide-to="0" class="active"></li>
                            }
                            else
                            {
                                <li data-target="#carouselExampleCaptions" data-slide-to="@i"></li>
                            }
                        }
                    </ol>
                    <div class="carousel-inner overflow-hidden">
                        @foreach (var item in Model.IdentityProfile.ProfileGames.Where(w => w.Status == Env.GameStatusFollowed).Take(20))
                        {
                            @if (item == Model.IdentityProfile.ProfileGames.Where(w => w.Status == Env.GameStatusFollowed).Take(20).ToList()[0])
                            {
                                <a href="@Url.Action("StartGame", "Game", new
                                        {
                                            url = item.Game.GameUrl,
                                            name = item.Game.Name
                                        })
                                       " class="carousel-item active bg-dark">
                                    <img src="@item.Game.ImageUrl" class="rounded d-block w-100" style="height: 50vh; object-fit: cover; filter: opacity(40%)" alt="game" />
                                    <div class="carousel-caption d-none d-md-block mb-5">
                                        <h5>@item.Game.Name</h5>
                                        <p>@item.Game.Description</p>
                                    </div>
                                </a>
                            }
                            else
                            {
                                <a asp-action="StartGame" asp-route-Url="@item.Game.GameUrl" class="carousel-item bg-dark">
                                    <img src="@item.Game.ImageUrl" class="rounded d-block w-100" style="height: 50vh; object-fit: cover; filter: opacity(40%)" alt="game" />
                                    <div class="carousel-caption d-none d-md-block mb-5">
                                        <h5>@item.Game.Name</h5>
                                        <p>@item.Game.Description</p>
                                    </div>
                                </a>
                            }
                        }
                    </div>
                    <a class="carousel-control-prev" href="#carouselExampleCaptions" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleCaptions" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            }
            else
            {
                <div class="pr-4 pl-4 pb-4">
                    <div class="alert alert-success m-0">
                        <h5 class="m-0 text-dark">Following games for one</h5>
                    </div>
                </div>
            }
        </div>
        <div class="rounded overflow-hidden day_back_head d-flex flex-column">
            <div class="pt-4 pr-4 pl-4 pb-2">
                <h4>New games</h4>
            </div>
            @if (Model.Games.OrderByDescending(d => d.TimeStamp).Count() > 0)
            {
                @for (int item = 0; item < Model.Games.OrderByDescending(d => d.TimeStamp).Count(); ++item)
                {
                    @if (item < 3)
                    {
                        @if (Model.IdentityProfile.ProfileGames.FirstOrDefault(i => i.ProfileId == Model.IdentityProfile.Id && i.GameId == Model.Games.Reverse().ToList()[item].Id) != null)
                        {
                            <a href="@Url.Action("StartGame", "Game", new
                                {
                                    url = Model.Games.Reverse().ToList()[item].GameUrl,
                                    name = Model.Games.Reverse().ToList()[item].Name
                                })" class="position-relative bg-dark btngame" style="width: 100%; height: 30vh;">
                                <img src="@Model.Games.Reverse().ToList()[item].ImageUrl" class="rounded d-flex position-absolute" style="height: 30vh; width:100%; object-fit: cover; filter: opacity(20%) blur(2px)" alt="game" />
                                <div class="d-flex align-items-center" style="height: 100%;">
                                    <div class="ml-5">
                                        <img src="@Model.Games.Reverse().ToList()[item].ImageUrl" class="rounded d-flex" style="height: 128px; width:128px; object-fit: cover;" alt="game" />
                                    </div>
                                    <div class="ml-4 d-flex flex-column">
                                        <h5 class="text-light">@Model.Games.Reverse().ToList()[item].Name</h5>
                                        <p class="text-light">@Model.Games.Reverse().ToList()[item].Description</p>
                                    </div>
                                </div>
                            </a>
                        }
                        else
                        {
                            <a class="position-relative bg-dark btngame" style="width: 100%; height: 30vh;">
                                <img src="@Model.Games.Reverse().ToList()[item].ImageUrl" class="rounded d-flex position-absolute" style="height: 30vh; width:100%; object-fit: cover; filter: opacity(20%) blur(2px)" alt="game" />
                                <div class="d-flex align-items-center" style="height: 100%;">
                                    <div class="ml-5">
                                        <img src="@Model.Games.Reverse().ToList()[item].ImageUrl" class="rounded d-flex" style="height: 128px; width:128px; object-fit: cover;" alt="game" />
                                    </div>
                                    <div class="ml-4 d-flex flex-column">
                                        <h5 class="text-light">@Model.Games.Reverse().ToList()[item].Name</h5>
                                        <p class="text-light">@Model.Games.Reverse().ToList()[item].Description</p>
                                    </div>
                                </div>
                            </a>
                        }
                        <div class="bg-dark">
                            <form method="post">
                                @if (Model.IdentityProfile.ProfileGames.FirstOrDefault(i => i.ProfileId == Model.IdentityProfile.Id && i.GameId == Model.Games.Reverse().ToList()[item].Id) != null)
                                {
                                    @if (Model.IdentityProfile.ProfileGames.FirstOrDefault(i => i.ProfileId == Model.IdentityProfile.Id && i.GameId == Model.Games.Reverse().ToList()[item].Id).Status == Env.GameStatusBuyed)
                                    {
                                        <button class="btn btn-outline-light rounded-0 pointer ml-5" asp-controller="Game" asp-action="IndexPost" asp-route-Id="@Model.Games.Reverse().ToList()[item].Id">Add to Follow</button>
                                    }
                                    else if (Model.IdentityProfile.ProfileGames.FirstOrDefault(i => i.ProfileId == Model.IdentityProfile.Id && i.GameId == Model.Games.Reverse().ToList()[item].Id).Status == Env.GameStatusFollowed)
                                    {
                                        <button class="btn btn-outline-light rounded-0 pointer ml-5" asp-controller="Game" asp-action="IndexPost" asp-route-Id="@Model.Games.Reverse().ToList()[item].Id">Remove with Follow</button>
                                    }
                                }
                                else
                                {
                                    if (Model.IdentityProfile.IsPremium)
                                    {
                                        <button class="btn btn-outline-light rounded-0 pointer ml-5" asp-controller="Game" asp-action="IndexPost" asp-route-Id="@Model.Games.Reverse().ToList()[item].Id">Get for free</button>
                                    }
                                    else
                                    {
                                        @if (Model.IdentityProfile.TargetCoins >= Model.Games.Reverse().ToList()[item].TargetPrice)
                                        {
                                            <button class="btn btn-outline-light rounded-0 pointer ml-5" asp-controller="Game" asp-action="IndexPost" asp-route-Id="@Model.Games.Reverse().ToList()[item].Id">Buy game for @Model.Games.Reverse().ToList()[item].TargetPrice target coins</button>
                                        }
                                        else
                                        {
                                            <a href="" class="btn btn-outline-light rounded-0 pointer ml-5">There are not enough coins on your balance</a>
                                        }
                                    }
                                }
                            </form>
                        </div>
                    }
                }
            }
            else
            {
                <div class="pr-4 pl-4 pb-4">
                    <div class="alert alert-warning m-0">
                        <h5 class="m-0 text-dark">Game is not found</h5>
                    </div>
                </div>
            }
        </div>
        <div class="rounded day_back_head" style="font-family: Poppins, sans-serif;">
            <div class="pt-4 pr-4 pl-4">
                <h4>All games</h4>
            </div>
            <div class="d-flex flex-wrap justify-content-center p-4 gap">
                @foreach (var item in Model.Games)
                {
                    <div class="card borders bg-dark text-light rounded text-decoration-none" style="width: 200px;">
                        <img src="@item.ImageUrl" class="card-img-top rounded" alt="..." style="width: 200px; height: 200px; object-fit: cover;">
                        <div class="card-body overflow-auto" style="height:5rem;">
                            <h5 class="card-title text-center">@item.Name</h5>
                        </div>
                        <form method="post" class="card-footer p-0 d-flex flex-column bg-dark">
                            @if (Model.IdentityProfile.ProfileGames.FirstOrDefault(i => i.ProfileId == Model.IdentityProfile.Id && i.GameId == item.Id) != null)
                            {
                                @if (Model.IdentityProfile.ProfileGames.FirstOrDefault(i => i.ProfileId == Model.IdentityProfile.Id && i.GameId == item.Id).Status == Env.GameStatusBuyed)
                                {
                                    <button class="btn btn-outline-light rounded-0 pointer" style="width: 100%;" asp-controller="Game" asp-action="IndexPost" asp-route-Id="@item.Id">Add to Follow</button>
                                }
                                else if (Model.IdentityProfile.ProfileGames.FirstOrDefault(i => i.ProfileId == Model.IdentityProfile.Id && i.GameId == item.Id).Status == Env.GameStatusFollowed)
                                {
                                    <button class="btn btn-outline-light rounded-0 pointer" style="width: 100%;" asp-controller="Game" asp-action="IndexPost" asp-route-Id="@item.Id">Remove with Follow</button>
                                }
                                <a href="@Url.Action("StartGame", "Game", new
                                {
                                    url = item.GameUrl,
                                    name = item.Name
                                })" class="btn btn-outline-light rounded-0 pointer" style="width: 100%;">Play</a>
                            }
                            else
                            {
                                if (Model.IdentityProfile.IsPremium)
                                {
                                    <button class="btn btn-outline-light rounded-0 pointer" style="width: 100%;" asp-controller="Game" asp-action="IndexPost" asp-route-Id="@item.Id">Get for free</button>
                                }
                                else
                                {
                                    @if (Model.IdentityProfile.TargetCoins >= item.TargetPrice)
                                    {
                                        <button class="btn btn-outline-light rounded-0 pointer" style="width: 100%;" asp-controller="Game" asp-action="IndexPost" asp-route-Id="@item.Id">Buy game for @item.TargetPrice target coins</button>
                                    }
                                    else
                                    {
                                        <a href="" class="btn btn-outline-light rounded-0 pointer" style="width: 100%;">There are not enough coins on your balance</a>
                                    }
                                }
                            }
                        </form>                   
                    </div>
                }
        </div>
            <div class="p-2 d-flex justify-content-center">
                @if (Model.CurrentPage > 0)
                {
                    <a asp-controller="Game" asp-action="Index" asp-route-page="@(Model.CurrentPage - 1)" class="p-3 d-flex align-items-center text-decoration-none text-light day_back_main rounded border-0 navbtn"><i class="fas fa-arrow-left m-0 mr-2"></i>Prev</a>
                }
                @if ((Model.GameLenght / Env.GAME_LOADING_LIMIT) > Model.CurrentPage)
                {
                    <a asp-controller="Game" asp-action="Index" asp-route-page="@(Model.CurrentPage + 1)" class="p-3 d-flex align-items-center text-decoration-none text-light day_back_main rounded border-0 ml-3 navbtn">Next <i class="fas fa-arrow-right m-0 ml-2"></i></a>
                }
            </div>
        </div>
    </div>
</div>

<div class="position-fixed" id="downid" style="top: 0; left:0; width: 100vw; height: 100vh; z-index: 999;">
    <div class="d-flex justify-content-center align-items-center flex-column day_back_head w-100 h-100">
        <i class="fas fa-gamepad d-flex justify-content-center anim" style="width: 100%; font-size: 10vw;"></i>
        <h2 class="day_color_font mt-4 font-weight-bold" style="letter-spacing: 2px; font-family: Montserrat, sans-serif;">Games</h2>
    </div>
</div>

@section Scripts {
    <script>
        var before_loadtime = new Date().getTime();
        window.onload = Pageloadtime;
        function Pageloadtime() {
            var aftr_loadtime = new Date().getTime();
            pgloadtime = (aftr_loadtime - before_loadtime) / 1000
            setTimeout(() => {
                var loadscreen = document.getElementById("downid");
                loadscreen.classList.add("down");
            }, pgloadtime);
        }
    </script>
}
